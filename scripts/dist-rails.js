// Generated by CoffeeScript 1.9.3
(function() {
  var files, fs;

  fs = require('fs');

  files = fs.readdirSync('./dist');

  files.forEach(function(file) {
    var str;
    if (/html$/.exec(file)) {
      str = fs.readFileSync('./dist/' + file).toString();
      str = str.replace(/src=("|')([^'"]*)("|')/g, function(str, _, capture) {
        var path;
        if (!/^http/.exec(capture)) {
          path = 'site/' + capture.replace('./', '').replace('imgs/', '');
          return 'src="<%= image_path("' + path + '") %>"';
        } else {
          return str;
        }
      });
      str = str.replace(/<!-- BEGINCSS -->(.|\n)*<!-- ENDCSS -->/, '<%= stylesheet_link_tag "portal" %>');
      return fs.writeFileSync('./dist-rails/' + file + '.erb', str);
    }
  });

  files = fs.readdirSync('./src/sass');

  files.forEach(function(file) {
    var str;
    if (/sass$/.exec(file)) {
      str = fs.readFileSync('./src/sass/' + file).toString();
      str = str.replace(/[^-]url\("(.*)"\)/g, function(str, capture) {
        var path;
        if (/fonts/.exec(capture)) {
          path = capture.replace('../', '').replace('fonts/', '');
          return ' url(font-path("' + path + '"))';
        } else {
          if (!/^http/.exec(capture)) {
            return str;
          } else {
            path = capture.replace('./', '').replace('../', '');
            return ' image-url("' + path + '")';
          }
        }
      });
      return fs.writeFileSync('./dist-rails/sass/' + file, str);
    }
  });

}).call(this);
